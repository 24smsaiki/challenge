name: Docker Image CI

on:
  push:
    branches: ["feat/unit"]

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    env:
      SSHPASS: ${{ secrets.APP_PASS }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - uses: actions/checkout@v3
      - name: Build the Docker image
        run: docker build ./backend --file backend/Dockerfile --tag moncefsaiki/challenge-api-vue:latest && docker push moncefsaiki/challenge-api-vue:latest

  deploy-api:
    runs-on: ubuntu-latest
    env:
      SSHPASS: ${{ secrets.APP_PASS }}
    steps:
      - uses: actions/checkout@master
      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.APP_HOST }}
          username: ${{ secrets.APP_USER }}
          password: ${{ secrets.APP_PASS }}
          port: 65002
          source: "backend/,!vendor"
          target: "domains/moon-factory.fr/public_html/api-challenge/"
          strip_components: 1

      - uses: actions/checkout@v3
      - name: Deploy Api
        run:
          sudo apt update && sudo apt install sshpass &&  sshpass -e ssh -p 65002 -o stricthostkeychecking=no ${{ secrets.APP_USER }}@${{ secrets.APP_HOST }}
          "cd domains/moon-factory.fr/public_html/api-challenge/ &&
          composer2 update --ignore-platform-reqs && composer2 install --ignore-platform-reqs"

  deploy-front:
    runs-on: ubuntu-latest
    env:
      SSHPASS: ${{ secrets.APP_PASS_FRONT }}
    steps:
      - uses: actions/checkout@master
      - name: Copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.APP_HOST_FRONT }}
          username: ${{ secrets.APP_USER_FRONT }}
          password: ${{ secrets.APP_PASS_FRONT }}
          port: 22
          source: "frontend/,!node_modules"
          target: "/var/www/html/challenge/"
          strip_components: 1

      - uses: actions/checkout@v3
      - name: Deploy frontend
        run:
          sudo apt update && sudo apt install sshpass &&  sshpass -e ssh -o stricthostkeychecking=no ${{ secrets.APP_USER_FRONT }}@${{ secrets.APP_HOST_FRONT }}
          "cd /var/www/html/challenge/ && npm install && npm run build"
  test-stage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Docker
      uses: docker://docker:19.03.12

    - name: Build and run tests with Docker Compose
      run: |
        cd ./backend && docker-compose up -d && 
        docker-compose exec app vendor/bin/phpunit