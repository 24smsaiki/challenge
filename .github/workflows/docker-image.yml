name: Deploy project

on:
  push:
    branches: [ "feat/unit" ]
    
jobs:

  # build-docker-image:
  #   runs-on: ubuntu-latest
  #   env:
  #     SSHPASS: ${{ secrets.APP_PASS }}
  #   steps:
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_TOKEN }}

  #     - uses: actions/checkout@v3
  #     - name: Build the Docker image
  #       run: docker build ./backend/api/ --file backend/api/Dockerfile  --tag moncefsaiki/challenge-api-vue:latest && docker push moncefsaiki/challenge-api-vue:latest
    
  # deploy-api : 
  #   runs-on: ubuntu-latest
  #   env:
  #     SSHPASS: ${{ secrets.APP_PASS }}
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Copy files
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.APP_HOST }}
  #         username: ${{ secrets.APP_USER }}
  #         password: ${{ secrets.APP_PASS }}
  #         port: ${{ secrets.APP_PORT }}
  #         source: "backend/,!vendor"
  #         target: ${{ secrets.APP_TARGET_PATH }}
  #         strip_components: 1

  #     - uses: actions/checkout@v3
  #     - name: Deploy Api
  #       run: 
  #         sudo apt update && sudo apt install sshpass &&  sshpass -e ssh -p ${{ secrets.APP_PORT }} -o stricthostkeychecking=no ${{ secrets.APP_USER }}@${{ secrets.APP_HOST }}
  #         "cd ${{ secrets.APP_TARGET_PATH }} &&
  #         composer2 update --ignore-platform-reqs && composer2 install --ignore-platform-reqs"
  
  # deploy-front : 
  #   runs-on: ubuntu-latest
  #   env:
  #     SSHPASS: ${{ secrets.APP_PASS_FRONT }}
  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Copy files
  #       uses: appleboy/scp-action@master
  #       with:
  #         host: ${{ secrets.APP_HOST_FRONT }}
  #         username: ${{ secrets.APP_USER_FRONT }}
  #         password: ${{ secrets.APP_PASS_FRONT }}
  #         port: ${{ secrets.APP_PORT_FRONT }}
  #         source: "frontend/,!node_modules"
  #         target: ${{ secrets.APP_TARGET_PATH_FRONT }}
  #         strip_components: 1

  #     - uses: actions/checkout@v3
  #     - name: Deploy frontend
  #       run: 
  #         sudo apt update && sudo apt install sshpass &&  sshpass -e ssh -o stricthostkeychecking=no ${{ secrets.APP_USER_FRONT }}@${{ secrets.APP_HOST_FRONT }}
  #         "cd ${{ secrets.APP_TARGET_PATH_FRONT }} && npm install && npm run build"
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.2

    - name: Install dependencies
      run: cd ./backend/api && composer update --ignore-platform-reqs && composer install --ignore-platform-reqs

    - name: Run PHPUnit tests
      run: ./vendor/bin/phpunit




